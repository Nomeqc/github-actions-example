name: Download duboku.tv video & upload to AliyunDrive       

on:
  workflow_dispatch:
    inputs:
      tasklist_url:
        description: "请输入任务列表地址，内容示例：[{\"name\": \"test\", \"url\": \"https://xxx.com/test.m3u8\"}]"
        required: true
      drive_dir:
        description: "文件上传的网盘目录："
        required: true
      # drive_type:
      #   description: '网盘类型：'
      #   required: true
      #   default: 'aliyundrive' 
      #   type: choice
      #   options:
      #   - aliyundrive
      #   - cloud189
      concat_files:
        description: "合并文件"
        required: false
        default: false
        type: boolean
      enable_proxy:
        description: '启用代理'
        required: false 
        type: boolean 

env:
  ENABLE_PROXY: ${{ github.event.inputs.enable_proxy }}
  GITHUB_PROXY: ${{ secrets.GH_PROXY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOOLS_PATH: /usr/local/bin/tools
  
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout private scripts
        uses: actions/checkout@v4
        with:
          repository: nomeqc/private-scripts
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('duboku.tv/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: tools cache
        id: tools-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.TOOLS_PATH }}
          key: ${{ runner.os }}-tools-${{ hashFiles('duboku.tv/scripts/install.sh') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Install dependency
        run: |
          bash duboku.tv/scripts/install.sh
        env:
          TOOLS_CACHE_HIT: ${{ steps.tools-cache.outputs.cache-hit }}
      
      - name: Run
        run: |
          if [ "$CONCAT_FILES" == "true" ];then
            python -u duboku.tv/main.py "${LIST_URL}" "${DRIVE_DIR}" --merge-into-one
          else
            python -u duboku.tv/main.py "${LIST_URL}" "${DRIVE_DIR}"
          fi
        env:
          LIST_URL: ${{ github.event.inputs.tasklist_url }}
          DRIVE_DIR: ${{ github.event.inputs.drive_dir }}
          CONCAT_FILES: ${{ github.event.inputs.concat_files }}
