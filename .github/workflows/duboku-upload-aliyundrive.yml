name: Download duboku.tv video & upload to AliyunDrive       

on:
  workflow_dispatch:
    inputs:
      url_pattern:
        description: "请输入页面url，支持输入范围（如：[1-2]）:"
        required: true
      drive_dir:
        description: "文件上传的网盘目录："
        required: true
      # drive_type:
      #   description: '网盘类型：'
      #   required: true
      #   default: 'aliyundrive' 
      #   type: choice
      #   options:
      #   - aliyundrive
      #   - cloud189
      enable_proxy:
        description: '启用代理'
        required: false 
        type: boolean 

env:
  ENABLE_PROXY: ${{ github.event.inputs.enable_proxy }}
  GITHUB_PROXY: ${{ secrets.GH_PROXY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # CLOUD189_USER: ${{ secrets.CLOUD189_USER }}
  # CLOUD189_PWD: ${{ secrets.CLOUD189_PWD }}
  TOOLS_PATH: /usr/local/bin/tools
  
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout private scripts
        uses: actions/checkout@v3
        with:
          repository: nomeqc/private-scripts
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('duboku.tv/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: tools cache
        id: tools-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.TOOLS_PATH }}
          key: ${{ runner.os }}-tools-${{ hashFiles('duboku.tv/scripts/install.sh') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Install dependency
        run: |
          bash duboku.tv/scripts/install.sh
        env:
          TOOLS_CACHE_HIT: ${{ steps.tools-cache.outputs.cache-hit }}
      
      - name: Run
        run: |
          python duboku.tv/main.py --drive_type aliyundrive "${URL_PATTERN}" "${DRIVE_DIR}"
        env:
          URL_PATTERN: ${{ github.event.inputs.url_pattern }}
          DRIVE_DIR: ${{ github.event.inputs.drive_dir }}
          # DRIVE_TYPE: ${{ github.event.inputs.drive_type }}
